[{"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\pages\\Management.tsx":"1","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\pages\\TestAPI.tsx":"2","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\pages\\_app.tsx":"3","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\DropDownMenu.tsx":"4","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\LocationList.tsx":"5","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\ModalBox.tsx":"6","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\Nav.tsx":"7","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\SearchBar.tsx":"8","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HaNoiDistrict.tsx":"9","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HaNoiLocationList.tsx":"10","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HoChiMinhDistrict.tsx":"11","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HoChiMinhLocationList.tsx":"12","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\Map.tsx":"13","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\App.js":"14","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\App.test.js":"15","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\index.js":"16","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\reportWebVitals.js":"17","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\setupTests.js":"18"},{"size":2319,"mtime":1686726901226,"results":"19","hashOfConfig":"20"},{"size":9293,"mtime":1686126133278,"results":"21","hashOfConfig":"20"},{"size":914,"mtime":1685435778854,"results":"22","hashOfConfig":"20"},{"size":467,"mtime":1684224822122,"results":"23","hashOfConfig":"20"},{"size":8871,"mtime":1686725006131,"results":"24","hashOfConfig":"20"},{"size":3581,"mtime":1686726880634,"results":"25","hashOfConfig":"20"},{"size":805,"mtime":1684403189837,"results":"26","hashOfConfig":"20"},{"size":1197,"mtime":1686727207854,"results":"27","hashOfConfig":"20"},{"size":301,"mtime":1685433676544,"results":"28","hashOfConfig":"20"},{"size":8305,"mtime":1685433646664,"results":"29","hashOfConfig":"20"},{"size":308,"mtime":1685434290864,"results":"30","hashOfConfig":"20"},{"size":4369,"mtime":1686580655431,"results":"31","hashOfConfig":"20"},{"size":2790,"mtime":1686727182531,"results":"32","hashOfConfig":"20"},{"size":528,"mtime":1683870217445,"results":"33","hashOfConfig":"20"},{"size":246,"mtime":1683870217585,"results":"34","hashOfConfig":"20"},{"size":535,"mtime":1686123096080,"results":"35","hashOfConfig":"20"},{"size":362,"mtime":1683870217835,"results":"36","hashOfConfig":"20"},{"size":241,"mtime":1683870218025,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"1qb1n01",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\pages\\Management.tsx",["99","100","101","102"],[],"import { useState, useCallback, memo, useRef, useEffect } from \"react\";\r\nimport Map, { MapHandle } from \"../lib/Map\";\r\nimport Nav from \"../components/Nav\";\r\nimport ModalBox, { ModalHandle } from \"../components/ModalBox\";\r\nimport SearchBar, { SearchHandle } from \"../components/SearchBar\";\r\nimport DropDownMenu from \"../components/DropDownMenu\";\r\nimport LocationList from \"../components/LocationList\";\r\n\r\nexport default function Management() {\r\n  const modalRef = useRef<ModalHandle>();\r\n  const searchRef = useRef<SearchHandle>();\r\n  const mapRef = useRef<MapHandle>();\r\n  const [inputState, setInputState] = useState(\"\");\r\n  useEffect(() => {\r\n    if (inputState != \"\") {\r\n      searchRef.current.modifyInputValue(inputState);\r\n      mapRef.current.setMapCenter(\r\n        JSON.parse(\"[\" + searchRef.current.returnInputValue() + \"]\")\r\n      );\r\n      console.log(searchRef.current.returnInputValue());\r\n    }\r\n  }, [inputState]);\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar\r\n        ref={searchRef}\r\n        onClick={() => {\r\n          mapRef.current.setMapCenter(\r\n            JSON.parse(\"[\" + searchRef.current.returnInputValue() + \"]\")\r\n          );\r\n        }}\r\n      />\r\n      <DropDownMenu />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          padding: \"30px\",\r\n        }}\r\n      >\r\n        <LocationList\r\n          onClick={async (e) => {\r\n            await setInputState(e.currentTarget.className);\r\n          }}\r\n        />\r\n        <Map\r\n          onClick={async () => {\r\n            // const res = await fetch(\"http://202.191.58.206/pamair/hourly\", {\r\n            //   method: \"POST\",\r\n            //   headers: { \"Content-Type\": \"application/json\" },\r\n            //   body: JSON.stringify({\r\n            //     city: \"Ha Noi\",\r\n            //     district: \"Quan Hoan Kiem\",\r\n            //   }),\r\n            // });\r\n            // const data = res.json();\r\n            // console.log(\r\n            //   data.then(function (result) {\r\n            //     return result.aqi_us[0];\r\n            //   })\r\n            // );\r\n            modalRef.current.displayOnClick();\r\n          }}\r\n          ref={mapRef}\r\n        />\r\n      </div>\r\n      <ModalBox ref={modalRef} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\pages\\TestAPI.tsx",["103","104","105","106","107","108","109","110","111"],[],"import { useState, useCallback, memo, useRef } from \"react\";\r\nimport Map from \"../lib/Map\";\r\nimport Nav from \"../components/Nav\";\r\nimport ModalBox from \"../components/ModalBox\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport DropDownMenu from \"../components/DropDownMenu\";\r\nimport styleTestAPI from \"../public/style/TestAPI.module.css\";\r\nimport { HaNoiDistrict } from \"../lib/HaNoiDistrict\";\r\nimport { HoChiMinhDistrict } from \"../lib/HoChiMinhDistrict\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport default function TestAPI() {\r\n  let [cityState, setCityState] = useState(\"\");\r\n  let [districtState, setDistrictState] = useState(\"\");\r\n  let [modelState, setModelState] = useState(\"\");\r\n  let [cardClickCheck, setCardClickCheck] = useState(1);\r\n  let [loadingState, setLoadingState] = useState(\"loading\");\r\n  let [dataAPI, setDataAPI] = useState({\r\n    aqi_us: [],\r\n    aqi_vn: [],\r\n    \"pm2.5\": [],\r\n    time: [],\r\n  });\r\n  const fetchTestAPIOnClick = async () => {\r\n    if (modelState === \"12 hours\") {\r\n      const res = await fetch(\"http://202.191.58.206/pamair/hourly\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          city: cityState,\r\n          district: districtState,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      setDataAPI({\r\n        aqi_us: data.aqi_us,\r\n        aqi_vn: data.aqi_vn,\r\n        \"pm2.5\": data[\"pm2.5\"],\r\n        time: data.time,\r\n      });\r\n      console.log(dataAPI);\r\n    } else {\r\n      const res = await fetch(\"http://202.191.58.206/pamair/dayly\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          city: cityState,\r\n          district: districtState,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      setDataAPI({\r\n        aqi_us: data.aqi_us,\r\n        aqi_vn: data.aqi_vn,\r\n        \"pm2.5\": data[\"pm2.5\"],\r\n        time: data.time,\r\n      });\r\n      console.log(dataAPI);\r\n    }\r\n    setLoadingState(\"finish\");\r\n  };\r\n  const predictCard = (time, pm25, VNAQILevel, USAQILevel) => {\r\n    let color = \"\";\r\n    let pollutionLevel = \"\";\r\n    if (parseFloat(VNAQILevel) >= 0 && parseFloat(VNAQILevel) <= 50) {\r\n      pollutionLevel = \"Good\";\r\n    } else if (parseFloat(VNAQILevel) <= 100) {\r\n      pollutionLevel = \"Moderate\";\r\n    } else if (parseFloat(VNAQILevel) <= 200) {\r\n      pollutionLevel = \"Bad\";\r\n    } else if (parseFloat(VNAQILevel) <= 300) {\r\n      pollutionLevel = \"Harmful\";\r\n    } else {\r\n      pollutionLevel = \"Unsafe\";\r\n    }\r\n    if (pollutionLevel === \"Good\") {\r\n      color = \"blue\";\r\n    } else if (pollutionLevel === \"Moderate\") {\r\n      color = \"yellow\";\r\n    } else if (pollutionLevel === \"Bad\") {\r\n      color = \"orange\";\r\n    } else if (pollutionLevel === \"Harmful\") {\r\n      color = \"red\";\r\n    } else if (pollutionLevel === \"Unsafe\") {\r\n      color = \"maroon\";\r\n    }\r\n    return (\r\n      <div style={{ display: \"flex\", marginBottom: \"20px\" }}>\r\n        <h5 style={{ width: \"100px\" }}>{time}</h5>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"700px\",\r\n            border: `2px solid ${color}`,\r\n            borderRadius: \"15px\",\r\n            padding: \"5px\",\r\n            backgroundColor: `${color}`,\r\n          }}\r\n        >\r\n          <h5 style={{ marginRight: \"20px\" }}>{pollutionLevel}</h5>\r\n          <div>\r\n            <h5 style={{ marginRight: \"20px\", marginBottom: \"0\" }}>pm2.5</h5>\r\n            <h5 style={{ marginRight: \"20px\", marginTop: \"0\" }}>\r\n              {parseFloat(pm25).toFixed(2)}\r\n            </h5>\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <h5 style={{ marginRight: \"20px\" }}>\r\n              {parseFloat(VNAQILevel).toFixed(2) + \" VN AQI\"}\r\n            </h5>\r\n            <h5 style={{ marginRight: \"20px\" }}>\r\n              {parseFloat(USAQILevel).toFixed(2) + \" US AQI\"}\r\n            </h5>\r\n            <div>someIcon</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const checkName = (className, item) => {\r\n    if (className === \"city\") {\r\n      setCityState(item);\r\n    } else if (className === \"district\") {\r\n      setDistrictState(item);\r\n    } else {\r\n      setModelState(item);\r\n    }\r\n  };\r\n  const renderComponent = (requiredList: Array<string>, className) => {\r\n    return requiredList.map((item, index) => {\r\n      return (\r\n        <a\r\n          onClick={() => {\r\n            checkName(className, item);\r\n          }}\r\n          className={className}\r\n          key={index}\r\n        >\r\n          {item}\r\n        </a>\r\n      );\r\n    });\r\n  };\r\n  const selectAPIMenu: any = (\r\n    requiredList,\r\n    embeddedText: string,\r\n    className: string\r\n  ) => {\r\n    return (\r\n      <div className={styleTestAPI.dropdownTestAPI}>\r\n        <div className={styleTestAPI.dropBoxTestAPI}>\r\n          <input\r\n            style={{\r\n              width: \"150px\",\r\n              height: \"30px\",\r\n              border: \"2px solid black\",\r\n              marginRight: \"20px\",\r\n            }}\r\n            placeholder={embeddedText}\r\n          />\r\n        </div>\r\n        <div className={styleTestAPI.dropdownContentTestAPI}>\r\n          {renderComponent(requiredList, className)}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          marginTop: \"-10px\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\" }}>\r\n          <div>\r\n            <h3>City</h3>\r\n            {selectAPIMenu([\"Ha Noi\", \"Ho Chi Minh\"], \"select city\", \"city\")}\r\n          </div>\r\n          <div>\r\n            <h3>District</h3>\r\n            {selectAPIMenu(\r\n              cityState === \"Ha Noi\" ? HaNoiDistrict : HoChiMinhDistrict,\r\n              \"select district\",\r\n              \"district\"\r\n            )}\r\n          </div>\r\n          <div>\r\n            <h3>Model</h3>\r\n            {selectAPIMenu([\"12 hours\", \"3 days\"], \"select model\", \"model\")}\r\n          </div>\r\n        </div>\r\n        <button\r\n          className={styleTestAPI.buttonAPIPredict}\r\n          onClick={() => {\r\n            setLoadingState(\"loading\");\r\n            if (cardClickCheck === 1) {\r\n              setCardClickCheck(0);\r\n            } else if (cardClickCheck === 0) {\r\n              setCardClickCheck(0);\r\n            }\r\n\r\n            if (cityState && districtState && modelState) {\r\n              fetchTestAPIOnClick();\r\n            } else {\r\n              alert(`Error:please prompt city and district`);\r\n            }\r\n          }}\r\n        >\r\n          Get Predict Result\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-start\",\r\n          width: \"100%\",\r\n          marginTop: \"50px\",\r\n        }}\r\n      >\r\n        <div>\r\n          <div style={{ marginLeft: \"20px\", width: \"200px\" }}>\r\n            <h1 style={{ backgroundColor: \"gray\", width: \"120px\" }}>\r\n              Location\r\n            </h1>\r\n            <h3>{cityState + \",\" + districtState}</h3>\r\n          </div>\r\n          <div style={{ marginLeft: \"20px\" }}>\r\n            <h1 style={{ backgroundColor: \"gray\", width: \"120px\" }}>Model</h1>\r\n            <h3>{modelState}</h3>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginLeft: \"150px\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\" }}>\r\n            <h3 style={{ marginRight: \"20px\", width: \"100px\" }}>\r\n              {modelState === \"12 hours\" ? \"Hour\" : \"Day\"}\r\n            </h3>\r\n            <h3>Pollution Level</h3>\r\n          </div>\r\n          <div\r\n            style={{\r\n              border: \"2px solid rgba(0, 0, 0, 0.3)\",\r\n              borderRadius: \"15px\",\r\n              height: \"400px\",\r\n              padding: \"10px\",\r\n              overflowY: \"auto\",\r\n              overflowX: \"hidden\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className={styleTestAPI.TestAPICardContainer}\r\n          >\r\n            {loadingState === \"loading\" ? (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <ReactLoading type=\"balls\" color=\"#000\" />\r\n                  </div>\r\n                  <h3>waiting to fetch goods</h3>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {dataAPI.time.map((item, index) => {\r\n                  return predictCard(\r\n                    dataAPI.time[index],\r\n                    dataAPI[\"pm2.5\"][index],\r\n\r\n                    dataAPI.aqi_vn[index] + \" VN AQI\",\r\n                    dataAPI.aqi_us[index] + \" US AQI\"\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\pages\\_app.tsx",["112","113","114","115","116","117","118"],[],"import { useState, useCallback, memo, useRef } from \"react\";\r\nimport Map from \"../lib/Map\";\r\nimport Nav from \"../components/Nav\";\r\nimport \"../public/style/App.css\";\r\nimport ModalBox from \"../components/ModalBox\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport DropDownMenu from \"../components/DropDownMenu\";\r\nimport Management from \"./Management\";\r\nimport TestAPI from \"./TestAPI\";\r\nfunction App() {\r\n  const [pageRoute, setPageRoute] = useState(\"Management\");\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ height: \"100%\" }}>\r\n        <Nav\r\n          onClick={(e) => {\r\n            if (e.target.id === \"TestAPI\") {\r\n              setPageRoute(\"Management\");\r\n            } else {\r\n              setPageRoute(\"TestAPI\");\r\n            }\r\n          }}\r\n        />\r\n        {pageRoute === \"Management\" ? <TestAPI /> : <Management />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\DropDownMenu.tsx",["119","120"],[],"import DropDownMenuStyle from \"../public/style/DropDownMenu.module.css\";\r\nexport default function DropDownMenu() {\r\n  return (\r\n    <div className={DropDownMenuStyle.dropdown}>\r\n      <div className={DropDownMenuStyle.dropBox}>\r\n        <h3>Predict Model</h3>\r\n        <input placeholder={\"select your state\"} />\r\n      </div>\r\n      <div className={DropDownMenuStyle.dropdownContent}>\r\n        <a>Hourly</a>\r\n        <a>Daily</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\LocationList.tsx",["121","122","123","124","125","126"],[],"import {\r\n  useState,\r\n  useCallback,\r\n  memo,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport LocationListStyle from \"../public/style/LocationList.module.css\";\r\nimport { HaNoiLocationList } from \"../lib/HaNoiLocationList\";\r\nimport { HoChiMinhLocationList } from \"../lib/HoChiMinhLocationList\";\r\n\r\nimport { type } from \"@testing-library/user-event/dist/type\";\r\nfunction LocationList(props: { onClick: (e) => void }, ref) {\r\n  const addingCardRef = useRef<HTMLInputElement>();\r\n  const [ListState, setListState] = useState(\"Ha Noi\");\r\n  const [cardListState, setCardListState] =\r\n    useState<Array<any>>(HaNoiLocationList);\r\n  const numberRef = useRef<HTMLInputElement>();\r\n  const nameRef = useRef<HTMLInputElement>();\r\n  const districtRef = useRef<HTMLInputElement>();\r\n  const latRef = useRef<HTMLInputElement>();\r\n  const lngRef = useRef<HTMLInputElement>();\r\n\r\n  const checkListState = () => {\r\n    if (ListState === \"Ha Noi\") {\r\n      setListState(\"Ho Chi Minh\");\r\n    } else {\r\n      setListState(\"Ha Noi\");\r\n    }\r\n  };\r\n  const LocationCard = (index, item0, item1, item2, item3, item4) => {\r\n    return typeof index === \"number\" &&\r\n      typeof item0 === \"string\" &&\r\n      typeof item1 === \"string\" &&\r\n      typeof item2 === \"string\" &&\r\n      typeof item3 === \"number\" &&\r\n      typeof item4 === \"number\" ? (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            border: \"2px solid black\",\r\n            borderRadius: \"5px\",\r\n            padding: \"0px\",\r\n          }}\r\n          key={item3}\r\n          className={item3 + \",\" + item4}\r\n          onClick={props.onClick}\r\n        >\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"70px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {item0}\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"150px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {item1}\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"150px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {item2}\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"150px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {typeof item3 === \"number\" && typeof item4 === \"number\" ? (\r\n              item3.toFixed(2) + \",\" + item4.toFixed(2)\r\n            ) : (\r\n              <div>\r\n                <div>{item3}</div>\r\n                <div>{item4}</div>\r\n              </div>\r\n            )}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            border: \"2px solid black\",\r\n            borderRadius: \"5px\",\r\n            padding: \"0px\",\r\n          }}\r\n          key={item3}\r\n          className={item3 + \",\" + item4}\r\n        >\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"70px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {item0}\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"150px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {item1}\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"150px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {item2}\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              height: \"72px\",\r\n              width: \"150px\",\r\n              border: \"2px solid black\",\r\n              margin: \"0px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {typeof item3 === \"number\" && typeof item4 === \"number\" ? (\r\n              item3.toFixed(2) + \",\" + item4.toFixed(2)\r\n            ) : (\r\n              <div>\r\n                <div>{item3}</div>\r\n                <div>{item4}</div>\r\n              </div>\r\n            )}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const ListLocationCard = (array) => {\r\n    return array.map((items, index) => {\r\n      return LocationCard(\r\n        index,\r\n        items[0],\r\n        items[1],\r\n        items[2],\r\n        items[3],\r\n        items[4]\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className={LocationListStyle.LocationList}>\r\n      <div\r\n        onClick={() => checkListState()}\r\n        style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}\r\n      >\r\n        <h2>{ListState}</h2>\r\n      </div>\r\n      {ListState === \"Ha Noi\"\r\n        ? ListLocationCard(HaNoiLocationList)\r\n        : ListLocationCard(HoChiMinhLocationList)}\r\n      <div style={{ display: \"none\" }} ref={addingCardRef}>\r\n        {LocationCard(\r\n          1,\r\n          <input\r\n            ref={numberRef}\r\n            placeholder=\"number\"\r\n            style={{ width: \"60px\", backgroundColor: \"transparent\" }}\r\n          ></input>,\r\n          <input\r\n            ref={nameRef}\r\n            placeholder=\"name\"\r\n            style={{ width: \"132px\", backgroundColor: \"transparent\" }}\r\n          ></input>,\r\n          <input\r\n            ref={districtRef}\r\n            placeholder=\"district\"\r\n            style={{ width: \"132px\", backgroundColor: \"transparent\" }}\r\n          ></input>,\r\n          <input\r\n            ref={latRef}\r\n            placeholder=\"lattitude\"\r\n            style={{ width: \"132px\", backgroundColor: \"transparent\" }}\r\n          ></input>,\r\n          <input\r\n            ref={lngRef}\r\n            placeholder=\"longtitude\"\r\n            style={{ width: \"132px\", backgroundColor: \"transparent\" }}\r\n          ></input>\r\n        )}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <button\r\n            style={{\r\n              backgroundColor: \"transparent\",\r\n              width: \"50px\",\r\n              height: \"30px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              if (\r\n                numberRef.current.value &&\r\n                nameRef.current.value &&\r\n                districtRef.current.value &&\r\n                latRef.current.value &&\r\n                lngRef.current.value\r\n              ) {\r\n                addingCardRef.current.style.display = \"none\";\r\n                let pushingVal: Array<any> = [\r\n                  parseFloat(numberRef.current.value),\r\n                  nameRef.current.value,\r\n                  districtRef.current.value,\r\n                  parseFloat(latRef.current.value),\r\n                  parseFloat(lngRef.current.value),\r\n                ];\r\n\r\n                if (ListState === \"Ha Noi\") {\r\n                  HaNoiLocationList.push(pushingVal);\r\n                  setCardListState(HaNoiLocationList);\r\n                } else {\r\n                  HoChiMinhLocationList.push(pushingVal);\r\n                  setCardListState(HoChiMinhLocationList);\r\n                }\r\n              } else {\r\n                alert(\"please prompt all the field\");\r\n              }\r\n              // setLocationListState(HaNoiLocationList.push([numberLocationState,nameLocationState,districtLocationState,latLocationState,lngLocationState]))\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1\r\n          className={LocationListStyle.addButtonLocationList}\r\n          style={{\r\n            border: \"2px solid black\",\r\n            borderRadius: \"100%\",\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => {\r\n            addingCardRef.current.style.display = \"block\";\r\n          }}\r\n        >\r\n          +\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationList;\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\ModalBox.tsx",["127","128"],[],"import styleModal from \"../public/style/modal.module.css\";\r\nimport React, { useRef, useImperativeHandle } from \"react\";\r\ntype ModalProps = {};\r\n\r\nexport type ModalHandle = {\r\n  displayOnClick: () => void;\r\n};\r\nconst selectModelMenu: any = () => {\r\n  return (\r\n    <div className={styleModal.dropdownModelMenu}>\r\n      <div className={styleModal.dropBoxModelMenu}>\r\n        <input style={{ width: \"93px\" }} placeholder={\"select model\"} />\r\n      </div>\r\n      <div className={styleModal.dropdownContentModelMenu}>\r\n        <a style={{ color: \"white\" }}>Hourly</a>\r\n        <a style={{ color: \"white\" }}>Daily</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst table = () => {\r\n  return (\r\n    <table className={styleModal.table}>\r\n      <tr>\r\n        <th></th>\r\n        <th>Pm2.5</th>\r\n        <th>Hum</th>\r\n        <th>Temp</th>\r\n      </tr>\r\n      <tr>\r\n        <td>Mean</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Max</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n      <tr>\r\n        <td>Min</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </table>\r\n  );\r\n};\r\nconst table2 = () => {\r\n  return (\r\n    <table className={styleModal.table}>\r\n      <tr>\r\n        <th></th>\r\n        <th>R2</th>\r\n        <th>Mdape</th>\r\n        <th>Slope</th>\r\n        <th>Offset</th>\r\n      </tr>\r\n      <tr>\r\n        <td>1h</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n      <tr>\r\n        <td>2h</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </table>\r\n  );\r\n};\r\nconst ModalBox: React.ForwardRefRenderFunction<ModalHandle, ModalProps> = (\r\n  props,\r\n  forwardedRef\r\n) => {\r\n  const modal = useRef<HTMLInputElement>();\r\n  const closeOnClick = (e) => {\r\n    modal.current.style.display = \"none\";\r\n  };\r\n  useImperativeHandle(forwardedRef, () => {\r\n    return { displayOnClick: () => (modal.current.style.display = \"block\") };\r\n  });\r\n  return (\r\n    <div className={styleModal.modal} ref={modal}>\r\n      <div className={styleModal.modalContentContainer}>\r\n        <div className={styleModal.modalContent}>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <div>\r\n              <p className={styleModal.formCell}>Data To be fetch</p>\r\n              <div className={styleModal.formCell}>\r\n                <p>Data</p>\r\n                <p>Missing Value</p>\r\n                {table()}\r\n              </div>\r\n              <div>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <p>Model</p>\r\n                  {selectModelMenu()}\r\n                </div>\r\n                {table2()}\r\n              </div>\r\n              <p>Last updated:</p>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <button\r\n                  onClick={closeOnClick}\r\n                  className={styleModal.formButton}\r\n                  style={{ color: \"black\", backgroundColor: \"white\" }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className={styleModal.formButton}\r\n                  style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                >\r\n                  Train Model\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef(ModalBox);\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\Nav.tsx",["129","130","131"],[],"import { useState, useCallback, memo } from \"react\";\r\nimport styles from \"../public/style/Nav.module.css\";\r\n\r\nfunction Nav(props: { onClick: (e) => void }) {\r\n  return (\r\n    <div className={styles.Nav}>\r\n      <h2 style={{ marginLeft: \"7px\" }}>PamAir system</h2>\r\n      <div style={{ display: \"flex\", marginRight: \"3px\" }}>\r\n        <h3\r\n          id=\"Management\"\r\n          className={styles.navCom}\r\n          style={{ margin: \"5px\", opacity: \"0.6\" }}\r\n          onClick={props.onClick}\r\n        >\r\n          Management\r\n        </h3>\r\n        <h3\r\n          id=\"TestAPI\"\r\n          className={styles.navCom}\r\n          style={{ margin: \"5px\", opacity: \"0.6\" }}\r\n          onClick={props.onClick}\r\n        >\r\n          Test Api\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\components\\SearchBar.tsx",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HaNoiDistrict.tsx",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HaNoiLocationList.tsx",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HoChiMinhDistrict.tsx",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\HoChiMinhLocationList.tsx",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\lib\\Map.tsx",["132","133","134"],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\App.js",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\App.test.js",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\index.js",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\hoang\\OneDrive\\Desktop\\mapsapp\\src\\setupTests.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":1,"column":20,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":1,"column":33,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"140","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":11},{"ruleId":"141","severity":1,"message":"142","line":15,"column":20,"nodeType":"143","messageId":"144","endLine":15,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":1,"column":20,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":1,"column":33,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"145","line":1,"column":39,"nodeType":"137","messageId":"138","endLine":1,"endColumn":45},{"ruleId":"135","severity":1,"message":"146","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":11},{"ruleId":"135","severity":1,"message":"140","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":11},{"ruleId":"135","severity":1,"message":"147","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":16},{"ruleId":"135","severity":1,"message":"148","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":17},{"ruleId":"135","severity":1,"message":"149","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":134,"column":9,"nodeType":"152","endLine":140,"endColumn":10},{"ruleId":"135","severity":1,"message":"136","line":1,"column":20,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":1,"column":33,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"145","line":1,"column":39,"nodeType":"137","messageId":"138","endLine":1,"endColumn":45},{"ruleId":"135","severity":1,"message":"146","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":11},{"ruleId":"135","severity":1,"message":"147","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"148","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":17},{"ruleId":"135","severity":1,"message":"149","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":10,"column":9,"nodeType":"152","endLine":10,"endColumn":12},{"ruleId":"150","severity":1,"message":"151","line":11,"column":9,"nodeType":"152","endLine":11,"endColumn":12},{"ruleId":"135","severity":1,"message":"136","line":3,"column":3,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"139","line":4,"column":3,"nodeType":"137","messageId":"138","endLine":4,"endColumn":7},{"ruleId":"135","severity":1,"message":"153","line":6,"column":3,"nodeType":"137","messageId":"138","endLine":6,"endColumn":22},{"ruleId":"135","severity":1,"message":"154","line":7,"column":3,"nodeType":"137","messageId":"138","endLine":7,"endColumn":13},{"ruleId":"135","severity":1,"message":"155","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":14},{"ruleId":"135","severity":1,"message":"156","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":15,"column":9,"nodeType":"152","endLine":15,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":16,"column":9,"nodeType":"152","endLine":16,"endColumn":39},{"ruleId":"135","severity":1,"message":"157","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":1,"column":20,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"139","line":1,"column":33,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"158","line":5,"column":3,"nodeType":"137","messageId":"138","endLine":5,"endColumn":9},{"ruleId":"135","severity":1,"message":"159","line":44,"column":10,"nodeType":"137","messageId":"138","endLine":44,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":52,"column":6,"nodeType":"162","endLine":52,"endColumn":8,"suggestions":"163"},"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'memo' is defined but never used.","'Nav' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'Map' is defined but never used.","'ModalBox' is defined but never used.","'SearchBar' is defined but never used.","'DropDownMenu' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useImperativeHandle' is defined but never used.","'forwardRef' is defined but never used.","'type' is defined but never used.","'cardListState' is assigned a value but never used.","'useState' is defined but never used.","'Circle' is defined but never used.","'map' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'center'. Either include it or remove the dependency array.","ArrayExpression",["164"],{"desc":"165","fix":"166"},"Update the dependencies array to be: [center]",{"range":"167","text":"168"},[1332,1334],"[center]"]